
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <link rel="schema.DC" href="http://www.dublincore.org/documents/2003/02/04/dces/">
      <META name="DC.Title" content="&#xA;  Integrated generic resource">
      <META name="DC.Dates" content="2010/12/26 12:06:25">
      <META name="DC.Published" content="2011-02-01">
      <META name="DC.Contributor" content="Klein, Lothar">
      <META name="DC.Creator" content="Frechette, Simon">
      <META name="DC.Description" content="The integrated resource representation_structures">
      <META name="DC.Subject" content="STEP, ISO 10303, integrated resource, resource, integrated generic resources, representation, coordinate space, transformation">
      <META name="DC.Identifier" content="ISO TC184/SC4/WG12&nbsp;N6134">
      <META name="DC.Replaces" content="ISO TC184/SC4/WG12 N4827">
      <META name="SC4.version" content="3">
      <META name="SC4.checklist.internal_review" content="ISO TC184/SC4/WG12 N6136">
      <META name="SC4.checklist.project_leader" content="ISO TC184/SC4/WG12 N6137">
      <META name="SC4.checklist.convener" content="ISO TC184/SC4/WG12 N6138">
      <META name="STEPMOD.resource.rcs.date" content="Date: 2010/12/26 12:06:25 ">
      <META name="STEPMOD.resource.rcs.revision" content="Revision: 1.34 ">
      <TITLE>ISO 10303-43:2011-02(E) </TITLE>
   </HEAD>
   <BODY>
      <TABLE cellspacing="0" border="0" width="100%">
         <TR>
            <TD><small></small></TD>
         </TR>
         <TR>
            <TD valign="MIDDLE"><B>
                  	  Integrated generic resource: Representation structures</B></TD>
            <TD valign="MIDDLE" align="RIGHT"><b>ISO 10303-43:2011-02(E) <br>
                  &copy; ISO
                  </b></TD>
         </TR>
      </TABLE>
      <TABLE border="1" cellspacing="1" width="100%">
         <TR>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/cover.htm">Cover page</A><BR><A HREF="../sys/contents.htm">Table of contents</A><BR><A HREF="../sys/cover.htm#copyright">Copyright</A><BR><A HREF="../sys/foreword.htm">Foreword</A><BR><A HREF="../sys/introduction.htm">Introduction</A><BR><A HREF="../sys/1_scope.htm">1 Scope</A><BR><A HREF="../sys/2_refs.htm">2 Normative references</A><BR><A HREF="../sys/3_defs.htm">
                     3 Terms, definitions and abbreviated terms
                     </A><br>
                  &nbsp; &nbsp;
                  <a href="../sys/3_defs.htm#termsdefns">3.1 Terms and definitions</a><br>
                  &nbsp; &nbsp;
                  <a href="../sys/3_defs.htm#abbrv">3.2 Abbreviated terms</a><br></p>
            </TD>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/4_schema.htm">4 Representation</A><BR><small>
                     &nbsp; &nbsp;<A HREF="../sys/4_schema.htm#gen">4.1 General</A><BR>
                     
                     
                     &nbsp; &nbsp;<A HREF="../sys/4_schema.htm#funcon">4.2 Fundamental concepts and assumptions</A><BR>
                     				&nbsp; &nbsp;<A HREF="../sys/4_schema.htm#types">4.3 Representation type definitions</A><BR>
                     				&nbsp; &nbsp;<A HREF="../sys/4_schema.htm#entities">4.4 Representation entity definitions</A><BR>
                     &nbsp; &nbsp;<A HREF="../sys/4_schema.htm#functions">4.5 Representation function definitions</A><BR></small></p>
            </TD>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/a_short_names.htm">A Short names of entities</A><BR><A HREF="../sys/b_obj_reg.htm">B Information object
                     registration</A><BR><A HREF="../sys/c_exp.htm">C Computer interpretable listings</A><BR><A HREF="../sys/d_expg.htm">
                     D EXPRESS-G diagrams
                     </A><BR><A HREF="../sys/g_change.htm">E Change history</A><BR><A HREF="../sys/biblio.htm#bibliography">Bibliography</A><BR><A HREF="../sys/resdocindex.htm">Index</A><BR></p>
            </TD>
         </TR>
      </TABLE>
      <H2><A NAME="annexc-express"></A></H2><code>
         (*<br>ISO TC184/SC4/WG12 N6135 - ISO 10303-43 Representation structures - EXPRESS<br>Supersedes 
         ISO TC184/SC4/WG12&nbsp;N4828<br>*)
         </code><br><code><br><br><a name="representation_schema">
            SCHEMA <b>representation_schema</b>;</a><br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../../data/resources/basic_attribute_schema/basic_attribute_schema.htm#basic_attribute_schema">basic_attribute_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-41<br>&nbsp;&nbsp;(get_description_value,<br>
         &nbsp;&nbsp;
         get_id_value);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../../data/resources/measure_schema/measure_schema.htm#measure_schema">measure_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-41<br>&nbsp;&nbsp;(measure_value,<br>
         &nbsp;&nbsp;
         measure_with_unit);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema">support_resource_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-41<br>&nbsp;&nbsp;(bag_to_set,<br>
         &nbsp;&nbsp;
         identifier,<br>
         &nbsp;&nbsp;
         label,<br>
         &nbsp;&nbsp;
         text);
         <br><br></code><code><br><A NAME="representation_schema.compound_item_definition">TYPE </A><b>compound_item_definition</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#representation_schema.list_representation_item">list_representation_item</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#representation_schema.set_representation_item">set_representation_item</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="representation_schema.founded_item_select">TYPE </A><b>founded_item_select</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#representation_schema.founded_item">founded_item</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#representation_schema.representation_item">representation_item</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="representation_schema.list_representation_item">TYPE </A><b>list_representation_item</b> =
         LIST[1:?] OF <A HREF="../../../../data/resource_docs/representation_structures/sys/4_schema.htm#representation_schema.representation_item">representation_item</A>;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="representation_schema.set_representation_item">TYPE </A><b>set_representation_item</b> =
         SET[1:?] OF <A HREF="../../../../data/resource_docs/representation_structures/sys/4_schema.htm#representation_schema.representation_item">representation_item</A>;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="representation_schema.transformation">TYPE </A><b>transformation</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#representation_schema.functionally_defined_transformation">functionally_defined_transformation</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#representation_schema.item_defined_transformation">item_defined_transformation</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="representation_schema.binary_representation_item">ENTITY <b>binary_representation_item</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_item">representation_item</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.binary_representation_item.binary_value">binary_value : </A>BINARY;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.bytes_representation_item">ENTITY <b>bytes_representation_item</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.binary_representation_item">binary_representation_item</A>);<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.bytes_representation_item.no_of_bytes">no_of_bytes : </A>INTEGER := BLENGTH(SELF\binary_representation_item.binary_value) DIV 8;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.bytes_representation_item.wr:wr1">WR1: BLENGTH(SELF\binary_representation_item.binary_value) MOD 8 = 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.compound_representation_item">ENTITY <b>compound_representation_item</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_item">representation_item</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.compound_representation_item.item_element">item_element : </A><A HREF="#representation_schema.compound_item_definition">compound_item_definition</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.definitional_representation">ENTITY <b>definitional_representation</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation">representation</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.definitional_representation.wr:wr1">WR1: 'REPRESENTATION_SCHEMA.PARAMETRIC_REPRESENTATION_CONTEXT' IN
            TYPEOF (SELF\representation.context_of_items );</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.definitional_representation_relationship">ENTITY <b>definitional_representation_relationship</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_relationship">representation_relationship</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.definitional_representation_relationship.wr:wr1">WR1: acyclic_representation_relationship(SELF,
            [SELF\representation_relationship.rep_2],
            'REPRESENTATION_SCHEMA.'+'REPRESENTATION');</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.definitional_representation_relationship_with_same_context">ENTITY <b>definitional_representation_relationship_with_same_context</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.definitional_representation_relationship">definitional_representation_relationship</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.definitional_representation_relationship_with_same_context.wr:wr1">WR1: SELF\representation_relationship.rep_1.context_of_items :=: 
            SELF\representation_relationship.rep_2.context_of_items;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.founded_item">ENTITY <b>founded_item</b></A>;<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.founded_item.users">users : </A>SET[0:?] OF <A HREF="#representation_schema.founded_item_select">founded_item_select</A> := using_items(SELF,[]);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.founded_item.wr:wr1">WR1: SIZEOF(users) &gt; 0;</A><br>
         &nbsp;&nbsp;<A NAME="representation_schema.founded_item.wr:wr2">WR2: NOT(SELF IN users);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.functionally_defined_transformation">ENTITY <b>functionally_defined_transformation</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.functionally_defined_transformation.name">name : </A>label;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.functionally_defined_transformation.description">description : </A>
         OPTIONAL 
         text;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.global_uncertainty_assigned_context">ENTITY <b>global_uncertainty_assigned_context</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_context">representation_context</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.global_uncertainty_assigned_context.uncertainty">uncertainty : </A>SET[1:?] OF <A HREF="#representation_schema.uncertainty_measure_with_unit">uncertainty_measure_with_unit</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.item_defined_transformation">ENTITY <b>item_defined_transformation</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.item_defined_transformation.name">name : </A>label;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.item_defined_transformation.description">description : </A>
         OPTIONAL 
         text;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.item_defined_transformation.transform_item_1">transform_item_1 : </A><A HREF="#representation_schema.representation_item">representation_item</A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.item_defined_transformation.transform_item_2">transform_item_2 : </A><A HREF="#representation_schema.representation_item">representation_item</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.mapped_item">ENTITY <b>mapped_item</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_item">representation_item</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.mapped_item.mapping_source">mapping_source : </A><A HREF="#representation_schema.representation_map">representation_map</A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.mapped_item.mapping_target">mapping_target : </A><A HREF="#representation_schema.representation_item">representation_item</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.mapped_item.wr:wr1">WR1: acyclic_mapped_representation(SELF);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.parametric_representation_context">ENTITY <b>parametric_representation_context</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_context">representation_context</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation">ENTITY <b>representation</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.name">name : </A>label;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.items">items : </A>SET[1:?] OF <A HREF="#representation_schema.representation_item">representation_item</A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.context_of_items">context_of_items : </A><A HREF="#representation_schema.representation_context">representation_context</A>;<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.id">id : </A>identifier := get_id_value (SELF);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.description">description : </A>text := get_description_value (SELF);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.wr:wr1">WR1: SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
            'ID_ATTRIBUTE.IDENTIFIED_ITEM'))
            &lt;= 1;</A><br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation.wr:wr2">WR2: SIZEOF (USEDIN (SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
            'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))
            &lt;= 1;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation_context">ENTITY <b>representation_context</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_context.context_identifier">context_identifier : </A>identifier;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_context.context_type">context_type : </A>text;<br>INVERSE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_context.representations_in_context">representations_in_context : </A>SET[1:?] OF <A HREF="#representation_schema.representation">representation</A> FOR context_of_items;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation_item">ENTITY <b>representation_item</b></A><br>
         &nbsp;&nbsp;SUPERTYPE OF 
         (ONEOF&nbsp;(<A HREF="#representation_schema.binary_representation_item">binary_representation_item</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#representation_schema.compound_representation_item">compound_representation_item</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#representation_schema.mapped_item">mapped_item</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#representation_schema.value_representation_item">value_representation_item</A>));<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_item.name">name : </A>label;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_item.wr:wr1">WR1: SIZEOF(using_representations(SELF)) &gt; 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation_item_relationship">ENTITY <b>representation_item_relationship</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_item_relationship.name">name : </A>label;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_item_relationship.description">description : </A>
         OPTIONAL 
         text;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_item_relationship.relating_representation_item">relating_representation_item : </A><A HREF="#representation_schema.representation_item">representation_item</A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_item_relationship.related_representation_item">related_representation_item : </A><A HREF="#representation_schema.representation_item">representation_item</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation_map">ENTITY <b>representation_map</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_map.mapping_origin">mapping_origin : </A><A HREF="#representation_schema.representation_item">representation_item</A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_map.mapped_representation">mapped_representation : </A><A HREF="#representation_schema.representation">representation</A>;<br>INVERSE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_map.map_usage">map_usage : </A>SET[1:?] OF <A HREF="#representation_schema.mapped_item">mapped_item</A> FOR mapping_source;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_map.wr:wr1">WR1: item_in_context(SELF.mapping_origin,
            SELF.mapped_representation.context_of_items);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation_relationship">ENTITY <b>representation_relationship</b></A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_relationship.name">name : </A>label;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_relationship.description">description : </A>
         OPTIONAL 
         text;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_relationship.rep_1">rep_1 : </A><A HREF="#representation_schema.representation">representation</A>;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_relationship.rep_2">rep_2 : </A><A HREF="#representation_schema.representation">representation</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.representation_relationship_with_transformation">ENTITY <b>representation_relationship_with_transformation</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_relationship">representation_relationship</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_relationship_with_transformation.transformation_operator">transformation_operator : </A><A HREF="#representation_schema.transformation">transformation</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.representation_relationship_with_transformation.wr:wr1">WR1: SELF\representation_relationship.rep_1.context_of_items
            :&lt;&gt;: SELF\representation_relationship.rep_2.context_of_items;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.uncertainty_assigned_representation">ENTITY <b>uncertainty_assigned_representation</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation">representation</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.uncertainty_assigned_representation.uncertainty">uncertainty : </A>SET[1:?] OF <A HREF="#representation_schema.uncertainty_measure_with_unit">uncertainty_measure_with_unit</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.uncertainty_measure_with_unit">ENTITY <b>uncertainty_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (measure_with_unit);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.uncertainty_measure_with_unit.name">name : </A>label;<br>
         &nbsp;&nbsp;<A NAME="representation_schema.uncertainty_measure_with_unit.description">description : </A>
         OPTIONAL 
         text;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.uncertainty_measure_with_unit.wr:wr1">WR1: valid_measure_value (SELF\measure_with_unit.value_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.value_representation_item">ENTITY <b>value_representation_item</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#representation_schema.representation_item">representation_item</A>);<br>
         &nbsp;&nbsp;<A NAME="representation_schema.value_representation_item.value_component">value_component : </A>measure_value;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="representation_schema.value_representation_item.wr:wr1">WR1: SIZEOF (QUERY (rep &lt;* using_representations (SELF) |
            NOT ('MEASURE_SCHEMA.GLOBAL_UNIT_ASSIGNED_CONTEXT'
            IN TYPEOF (rep.context_of_items)
            ))) = 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="representation_schema.acyclic_mapped_representation">FUNCTION <b>acyclic_mapped_representation</b></A><br>&nbsp;(mi : <A HREF="#representation_schema.mapped_item">mapped_item</A>) : BOOLEAN;
         </code><pre>LOCAL
      rms : SET OF representation_map;
      mis : SET OF mapped_item;
      rs1, rs2 : SET OF representation;
    END_LOCAL;
 
    rs1 := using_representations(mi);
    rs2 := [];
    -- loop as long as there are elements in rs1
    REPEAT WHILE SIZEOF(rs1) &gt; 0; 
      REPEAT i := 1 TO HIINDEX(rs1);
        -- Determine the set of representation_map that reference the parent_set
        rms := bag_to_set(USEDIN(rs1[i], 'REPRESENTATION_SCHEMA.REPRESENTATION_MAP.MAPPED_REPRESENTATION'));
        IF SIZEOF(rms) &gt; 0 THEN
          REPEAT j := 1 TO HIINDEX(rms);
            mis := bag_to_set(USEDIN(rms[i], 'REPRESENTATION_SCHEMA.MAPPED_ITEM.MAPPING_SOURCE'));
            IF SIZEOF(mis) &gt; 0 THEN
              REPEAT j := 1 TO HIINDEX(mis);
                -- check mis members for instance equal with mi. If so then there is a cycle
                IF mis[i] :=: mi THEN
                  RETURN (FALSE);
                END_IF;
                rs2 := rs2 + using_representations(mis[i]);
              END_REPEAT;
            END_IF;
          END_REPEAT;
        END_IF;
      END_REPEAT;
      rs1 := rs2;
      rs2 := [];
    END_REPEAT;
    RETURN (TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="representation_schema.acyclic_representation_relationship">FUNCTION <b>acyclic_representation_relationship</b></A><br>&nbsp;(relation : <A HREF="#representation_schema.representation_relationship">representation_relationship</A>; relatives : SET[1:?] OF <A HREF="#representation_schema.representation">representation</A>; specific_relation : STRING) : BOOLEAN;
         </code><pre>LOCAL
      x : SET OF representation_relationship;
    END_LOCAL;

    IF relation.rep_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(r &lt;* bag_to_set(USEDIN(relation.rep_1, 'REPRESENTATION_SCHEMA.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="representation_schema.item_in_context">FUNCTION <b>item_in_context</b></A><br>&nbsp;(item : <A HREF="#representation_schema.representation_item">representation_item</A>; cntxt : <A HREF="#representation_schema.representation_context">representation_context</A>) : BOOLEAN;
         </code><pre>LOCAL
      y : BAG OF representation_item;
    END_LOCAL;
    -- If there is one or more representation using both the item
    -- and cntxt return true.
    IF SIZEOF(USEDIN(item,'REPRESENTATION_SCHEMA.REPRESENTATION.ITEMS')
      * cntxt.representations_in_context) &gt; 0 THEN
      RETURN (TRUE);
      -- Determine the bag of representation_items that reference
      -- item
      ELSE y := QUERY(z &lt;* USEDIN (item , '') |
             'REPRESENTATION_SCHEMA.REPRESENTATION_ITEM' IN TYPEOF(z));
        -- Ensure that the bag is not empty
        IF SIZEOF(y) &gt; 0 THEN
        -- For each element in the bag
        REPEAT i := 1 TO HIINDEX(y);
          -- Check to see it is an item in the input cntxt.
          IF item_in_context(y[i], cntxt) THEN
            RETURN (TRUE);
          END_IF;
        END_REPEAT;
      END_IF;
    END_IF;
    -- Return false when all possible branches have been checked
    -- with no success.
    RETURN (FALSE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="representation_schema.using_items">FUNCTION <b>using_items</b></A><br>&nbsp;(item : <A HREF="#representation_schema.founded_item_select">founded_item_select</A>; checked_items : SET[0:?] OF <A HREF="#representation_schema.founded_item_select">founded_item_select</A>) : SET[0:?] OF <A HREF="../../../../data/resource_docs/representation_structures/sys/4_schema.htm#representation_schema.founded_item_select">founded_item_select</A>;
         </code><pre>LOCAL
      new_check_items    : SET OF founded_item_select;
      result_items       : SET OF founded_item_select;
      next_items         : SET OF founded_item_select;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    -- Find the set of representation_items or founded_items
    -- in which item is used directly.
    next_items := QUERY(z &lt;* bag_to_set( USEDIN(item , '')) |
      ('REPRESENTATION_SCHEMA.REPRESENTATION_ITEM' IN TYPEOF(z)) OR
      ('REPRESENTATION_SCHEMA.FOUNDED_ITEM'        IN TYPEOF(z)));
    -- If the set of next_items is not empty;
    IF SIZEOF(next_items) &gt; 0 THEN
      -- For each element in the set, find the using_items recursively
      REPEAT i := 1 TO HIINDEX(next_items);
        -- Check for loop in data model, i.e. one of the next_items
        -- occurred earlier in the set of check_items;
        IF NOT(next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] +
                          using_items(next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    -- return the set of representation_items or founded_items
    -- in which the input item is used directly and indirectly.
    RETURN (result_items);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="representation_schema.using_representations">FUNCTION <b>using_representations</b></A><br>&nbsp;(item : <A HREF="#representation_schema.founded_item_select">founded_item_select</A>) : SET[0:?] OF <A HREF="../../../../data/resource_docs/representation_structures/sys/4_schema.htm#representation_schema.representation">representation</A>;
         </code><pre>LOCAL
      results            : SET OF representation;
      result_bag         : BAG OF representation;
      intermediate_items : SET OF founded_item_select;
    END_LOCAL;
    -- Find the representations in which the item is used and add to the
    -- results set.
    results := [];
    result_bag := USEDIN(item,'REPRESENTATION_SCHEMA.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag);
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    -- Find all representation_items or founded_items
    -- by which item is referenced directly or indirectly.
    intermediate_items := using_items(item,[]);
    -- If the set of intermediate items is not empty;
    IF SIZEOF(intermediate_items) &gt; 0 THEN
      -- For each element in the set, add the
      -- representations of that element.
      REPEAT i := 1 TO HIINDEX(intermediate_items);
        result_bag := USEDIN(intermediate_items[i],
                      'REPRESENTATION_SCHEMA.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) &gt; 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag);
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    -- Return the set of representation in which the input item is
    -- used directly and indirectly (through intervening
    -- representation_items or founded items).
    RETURN (results);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="representation_schema.valid_measure_value">FUNCTION <b>valid_measure_value</b></A><br>&nbsp;(m : measure_value) : BOOLEAN;
         </code><pre>IF ('REAL' IN TYPEOF (m)) THEN
    RETURN (m &gt; 0.0);
    ELSE
     IF ('INTEGER' IN TYPEOF (m)) THEN
      RETURN (m &gt; 0);
      ELSE
        RETURN (TRUE);
      END_IF;
    END_IF;</pre><code>
         END_FUNCTION;
         </code><br><code><br>
         END_SCHEMA;&nbsp;&nbsp;--&nbsp;representation_schema<br></code><br><br><p>&copy; ISO 2011-02 &#8212; All rights reserved</p>
   </BODY>
</HTML>