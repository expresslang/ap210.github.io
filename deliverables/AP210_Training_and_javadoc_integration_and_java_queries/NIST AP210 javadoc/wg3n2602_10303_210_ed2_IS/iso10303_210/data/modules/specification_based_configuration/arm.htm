
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <TITLE>Integrated Resource: Specification_based_configuration_arm</TITLE>
   </HEAD>
   <body>
      <h2>Schema: Specification_based_configuration_arm</h2><code><br><br><a name="specification_based_configuration_arm">SCHEMA <b>Specification_based_configuration_arm</b>;</a><br><br></code><code>
         USE FROM
         <A HREF="../../../data/modules/effectivity_application/sys/e_exp_arm.htm#effectivity_application_arm">Effectivity_application_arm</A>;
         &nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1059<br><br></code><code>
         USE FROM
         <A HREF="../../../data/modules/product_class/sys/e_exp_arm.htm#product_class_arm">Product_class_arm</A>;
         &nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1103<br><br></code><code><br><A NAME="specification_based_configuration_arm.configuration_inheritance_types">TYPE </A><b>configuration_inheritance_types</b> =
         
         ENUMERATION
         
         OF
         <br>
         &nbsp;&nbsp; 
         (exception_case,<br>&nbsp;&nbsp;&nbsp;&nbsp;full_inheritance,<br>&nbsp;&nbsp;&nbsp;&nbsp;no_inheritance);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="specification_based_configuration_arm.configuration_kind">TYPE </A><b>configuration_kind</b> =
         
         ENUMERATION
         
         OF
         <br>
         &nbsp;&nbsp; 
         (usage,<br>&nbsp;&nbsp;&nbsp;&nbsp;design);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="specification_based_configuration_arm.configured_item_select">TYPE </A><b>configured_item_select</b> =
         
         EXTENSIBLE
         
         GENERIC_ENTITY
         
         
         SELECT;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="specification_based_configuration_arm.configured_specification_select">TYPE </A><b>configured_specification_select</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="../../../data/modules/product_class/sys/e_exp_arm.htm#product_class_arm.class_condition_association">Class_condition_association</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="../../../data/modules/product_class/sys/e_exp_arm.htm#product_class_arm.class_specification_association">Class_specification_association</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="specification_based_configuration_arm.effectivity_for_configuration">TYPE </A><b>effectivity_for_configuration</b> =
         
         
         SELECT
         BASED_ON
         <A HREF="../../../data/modules/effectivity_application/sys/e_exp_arm.htm#effectivity_application_arm.effectivity_item">effectivity_item</A>
         WITH 
         <br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#specification_based_configuration_arm.configuration">Configuration</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="specification_based_configuration_arm.configuration">ENTITY <b>Configuration</b></A>;<br>
         &nbsp;&nbsp;<A NAME="specification_based_configuration_arm.configuration.configured_element">configured_element : </A><A HREF="#specification_based_configuration_arm.configured_item_select">configured_item_select</A>;<br>
         &nbsp;&nbsp;<A NAME="specification_based_configuration_arm.configuration.is_solution_for">is_solution_for : </A><A HREF="#specification_based_configuration_arm.configured_specification_select">configured_specification_select</A>;<br>
         &nbsp;&nbsp;<A NAME="specification_based_configuration_arm.configuration.configuration_type">configuration_type : </A><A HREF="#specification_based_configuration_arm.configuration_kind">configuration_kind</A>;<br>
         &nbsp;&nbsp;<A NAME="specification_based_configuration_arm.configuration.inheritance_type">inheritance_type : </A><A HREF="#specification_based_configuration_arm.configuration_inheritance_types">configuration_inheritance_types</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="specification_based_configuration_arm.configuration.wr:wr1">WR1: consistent_configuration_type(SELF);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="specification_based_configuration_arm.restrict_to_dated_effectivity">RULE&nbsp;<b>restrict_to_dated_effectivity</b></A>&nbsp;FOR <br>
         (<A HREF="../../../data/modules/effectivity_application/sys/4_info_reqs.htm#effectivity_application_arm.effectivity_assignment">Effectivity_assignment</A>);<br></code><pre>
LOCAL
ndea_set : SET OF Effectivity_assignment := [];
END_LOCAL;
ndea_set := QUERY(ea &lt;* Effectivity_assignment |
NOT ('SPECIFICATION_BASED_CONFIGURATION_ARM.DATED_EFFECTIVITY' IN TYPEOF(ea.assigned_effectivity)));
      </pre><code>WHERE<br>
         &nbsp;&nbsp;<A NAME="specification_based_configuration_arm.restrict_to_dated_effectivity.wr:wr1">WR1: SIZEOF(QUERY(ea &lt;* ndea_set |(SIZEOF(['SPECIFICATION_BASED_CONFIGURATION_ARM.CONFIGURATION']*type_of_set(ea.items))&gt;0)))
            =0;</A><br></code><code>
         END_RULE;
         </code><br><code><br><A NAME="specification_based_configuration_arm.consistent_configuration_type">FUNCTION <b>consistent_configuration_type</b></A><br>&nbsp;(config : <A HREF="../../../data/modules/specification_based_configuration/sys/e_exp_arm.htm#specification_based_configuration_arm.configuration">Configuration</A>) : BOOLEAN;
         </code><pre>
IF ('SPECIFICATION_BASED_CONFIGURATION_ARM.CLASS_CONDITION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
IF config.configuration_type = configuration_kind.usage THEN
RETURN(config.is_solution_for\Class_condition_association.condition_type ='part usage');
ELSE
RETURN(config.is_solution_for\Class_condition_association.condition_type ='design case');
END_IF;
END_IF;
IF ('SPECIFICATION_BASED_CONFIGURATION_ARM.CLASS_SPECIFICATION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
IF config.configuration_type = configuration_kind.usage THEN
RETURN(config.is_solution_for\Class_specification_association.association_type ='part usage');
ELSE
RETURN(config.is_solution_for\Class_specification_association.association_type ='design case');
END_IF;
END_IF;
RETURN(FALSE);
      </pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="specification_based_configuration_arm.type_of_set">FUNCTION <b>type_of_set</b></A><br>&nbsp;(items : SET OF GENERICENTITY) : SET OF STRING;
         </code><pre>
LOCAL
result: SET OF STRING:= [];
END_LOCAL;
REPEAT i:=1 TO HIINDEX(items);
result := result + TYPEOF(items[i]);
END_REPEAT;
RETURN(result);
      </pre><code>
         END_FUNCTION;
         </code><br><code><br>
         END_SCHEMA;&nbsp;&nbsp;--&nbsp;Specification_based_configuration_arm<br></code></body>
</HTML>