
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <TITLE>Integrated Resource: measure_schema</TITLE>
   </HEAD>
   <body>
      <h2>Schema: measure_schema</h2>
      <p><i>Source : ISO 10303-41</i></p><code><br><br><a name="measure_schema">SCHEMA <b>measure_schema</b>;</a><br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/basic_attribute_schema/basic_attribute_schema.htm#basic_attribute_schema">basic_attribute_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-41<br>&nbsp;&nbsp;(<A HREF="../../../data/resources/basic_attribute_schema/basic_attribute_schema.htm#basic_attribute_schema.get_name_value">get_name_value</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/basic_attribute_schema/basic_attribute_schema.htm#basic_attribute_schema.name_attribute">name_attribute</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema">representation_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-43<br>&nbsp;&nbsp;(<A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.representation_context">representation_context</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema">support_resource_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-41<br><br></code><code><br><A NAME="measure_schema.absorbed_dose_measure">TYPE </A><b>absorbed_dose_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.acceleration_measure">TYPE </A><b>acceleration_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.amount_of_substance_measure">TYPE </A><b>amount_of_substance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.area_measure">TYPE </A><b>area_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.capacitance_measure">TYPE </A><b>capacitance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.celsius_temperature_measure">TYPE </A><b>celsius_temperature_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.conductance_measure">TYPE </A><b>conductance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.context_dependent_measure">TYPE </A><b>context_dependent_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.count_measure">TYPE </A><b>count_measure</b> =
         NUMBER;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.descriptive_measure">TYPE </A><b>descriptive_measure</b> =
         STRING;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.dose_equivalent_measure">TYPE </A><b>dose_equivalent_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.electric_charge_measure">TYPE </A><b>electric_charge_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.electric_current_measure">TYPE </A><b>electric_current_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.electric_potential_measure">TYPE </A><b>electric_potential_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.energy_measure">TYPE </A><b>energy_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.force_measure">TYPE </A><b>force_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.frequency_measure">TYPE </A><b>frequency_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.illuminance_measure">TYPE </A><b>illuminance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.inductance_measure">TYPE </A><b>inductance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.length_measure">TYPE </A><b>length_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.luminous_flux_measure">TYPE </A><b>luminous_flux_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.luminous_intensity_measure">TYPE </A><b>luminous_intensity_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.magnetic_flux_density_measure">TYPE </A><b>magnetic_flux_density_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.magnetic_flux_measure">TYPE </A><b>magnetic_flux_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.mass_measure">TYPE </A><b>mass_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.measure_value">TYPE </A><b>measure_value</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#measure_schema.absorbed_dose_measure">absorbed_dose_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.acceleration_measure">acceleration_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.amount_of_substance_measure">amount_of_substance_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.area_measure">area_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.capacitance_measure">capacitance_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.celsius_temperature_measure">celsius_temperature_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.conductance_measure">conductance_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.context_dependent_measure">context_dependent_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.count_measure">count_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.descriptive_measure">descriptive_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.dose_equivalent_measure">dose_equivalent_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_charge_measure">electric_charge_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_current_measure">electric_current_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_potential_measure">electric_potential_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.energy_measure">energy_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.force_measure">force_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.frequency_measure">frequency_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.illuminance_measure">illuminance_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.inductance_measure">inductance_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.length_measure">length_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.luminous_flux_measure">luminous_flux_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.luminous_intensity_measure">luminous_intensity_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.magnetic_flux_density_measure">magnetic_flux_density_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.magnetic_flux_measure">magnetic_flux_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.mass_measure">mass_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.non_negative_length_measure">non_negative_length_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.numeric_measure">numeric_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.parameter_value">parameter_value</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.plane_angle_measure">plane_angle_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.positive_length_measure">positive_length_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.positive_plane_angle_measure">positive_plane_angle_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.positive_ratio_measure">positive_ratio_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.power_measure">power_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.pressure_measure">pressure_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.radioactivity_measure">radioactivity_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.ratio_measure">ratio_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.resistance_measure">resistance_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.solid_angle_measure">solid_angle_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.thermodynamic_temperature_measure">thermodynamic_temperature_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.time_measure">time_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.velocity_measure">velocity_measure</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.volume_measure">volume_measure</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.non_negative_length_measure">TYPE </A><b>non_negative_length_measure</b> =
         <A HREF="#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.non_negative_length_measure.wr:wr1">WR1: SELF &gt;= 0.0;</A><br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.numeric_measure">TYPE </A><b>numeric_measure</b> =
         NUMBER;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.parameter_value">TYPE </A><b>parameter_value</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.plane_angle_measure">TYPE </A><b>plane_angle_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.positive_length_measure">TYPE </A><b>positive_length_measure</b> =
         <A HREF="#measure_schema.non_negative_length_measure">non_negative_length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.positive_length_measure.wr:wr1">WR1: SELF &gt; 0.0;</A><br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.positive_plane_angle_measure">TYPE </A><b>positive_plane_angle_measure</b> =
         <A HREF="#measure_schema.plane_angle_measure">plane_angle_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.positive_plane_angle_measure.wr:wr1">WR1: SELF &gt; 0.0;</A><br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.positive_ratio_measure">TYPE </A><b>positive_ratio_measure</b> =
         <A HREF="#measure_schema.ratio_measure">ratio_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.positive_ratio_measure.wr:wr1">WR1: SELF &gt; 0.0;</A><br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.power_measure">TYPE </A><b>power_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.pressure_measure">TYPE </A><b>pressure_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.radioactivity_measure">TYPE </A><b>radioactivity_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.ratio_measure">TYPE </A><b>ratio_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.resistance_measure">TYPE </A><b>resistance_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.si_prefix">TYPE </A><b>si_prefix</b> =
         
         ENUMERATION
         
         OF
         <br>
         &nbsp;&nbsp; 
         (exa,<br>&nbsp;&nbsp;&nbsp;&nbsp;peta,<br>&nbsp;&nbsp;&nbsp;&nbsp;tera,<br>&nbsp;&nbsp;&nbsp;&nbsp;giga,<br>&nbsp;&nbsp;&nbsp;&nbsp;mega,<br>&nbsp;&nbsp;&nbsp;&nbsp;kilo,<br>&nbsp;&nbsp;&nbsp;&nbsp;hecto,<br>&nbsp;&nbsp;&nbsp;&nbsp;deca,<br>&nbsp;&nbsp;&nbsp;&nbsp;deci,<br>&nbsp;&nbsp;&nbsp;&nbsp;centi,<br>&nbsp;&nbsp;&nbsp;&nbsp;milli,<br>&nbsp;&nbsp;&nbsp;&nbsp;micro,<br>&nbsp;&nbsp;&nbsp;&nbsp;nano,<br>&nbsp;&nbsp;&nbsp;&nbsp;pico,<br>&nbsp;&nbsp;&nbsp;&nbsp;femto,<br>&nbsp;&nbsp;&nbsp;&nbsp;atto);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.si_unit_name">TYPE </A><b>si_unit_name</b> =
         
         ENUMERATION
         
         OF
         <br>
         &nbsp;&nbsp; 
         (metre,<br>&nbsp;&nbsp;&nbsp;&nbsp;gram,<br>&nbsp;&nbsp;&nbsp;&nbsp;second,<br>&nbsp;&nbsp;&nbsp;&nbsp;ampere,<br>&nbsp;&nbsp;&nbsp;&nbsp;kelvin,<br>&nbsp;&nbsp;&nbsp;&nbsp;mole,<br>&nbsp;&nbsp;&nbsp;&nbsp;candela,<br>&nbsp;&nbsp;&nbsp;&nbsp;radian,<br>&nbsp;&nbsp;&nbsp;&nbsp;steradian,<br>&nbsp;&nbsp;&nbsp;&nbsp;hertz,<br>&nbsp;&nbsp;&nbsp;&nbsp;newton,<br>&nbsp;&nbsp;&nbsp;&nbsp;pascal,<br>&nbsp;&nbsp;&nbsp;&nbsp;joule,<br>&nbsp;&nbsp;&nbsp;&nbsp;watt,<br>&nbsp;&nbsp;&nbsp;&nbsp;coulomb,<br>&nbsp;&nbsp;&nbsp;&nbsp;volt,<br>&nbsp;&nbsp;&nbsp;&nbsp;farad,<br>&nbsp;&nbsp;&nbsp;&nbsp;ohm,<br>&nbsp;&nbsp;&nbsp;&nbsp;siemens,<br>&nbsp;&nbsp;&nbsp;&nbsp;weber,<br>&nbsp;&nbsp;&nbsp;&nbsp;tesla,<br>&nbsp;&nbsp;&nbsp;&nbsp;henry,<br>&nbsp;&nbsp;&nbsp;&nbsp;degree_Celsius,<br>&nbsp;&nbsp;&nbsp;&nbsp;lumen,<br>&nbsp;&nbsp;&nbsp;&nbsp;lux,<br>&nbsp;&nbsp;&nbsp;&nbsp;becquerel,<br>&nbsp;&nbsp;&nbsp;&nbsp;gray,<br>&nbsp;&nbsp;&nbsp;&nbsp;sievert);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.solid_angle_measure">TYPE </A><b>solid_angle_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.thermodynamic_temperature_measure">TYPE </A><b>thermodynamic_temperature_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.time_measure">TYPE </A><b>time_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.unit">TYPE </A><b>unit</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#measure_schema.derived_unit">derived_unit</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.named_unit">named_unit</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.velocity_measure">TYPE </A><b>velocity_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.volume_measure">TYPE </A><b>volume_measure</b> =
         REAL;<br>
         END_TYPE; 
         <br></code><code><br><A NAME="measure_schema.absorbed_dose_measure_with_unit">ENTITY <b>absorbed_dose_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.absorbed_dose_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ABSORBED_DOSE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.absorbed_dose_unit">ENTITY <b>absorbed_dose_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.absorbed_dose_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.gray);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.acceleration_measure_with_unit">ENTITY <b>acceleration_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.acceleration_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ACCELERATION_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.acceleration_unit">ENTITY <b>acceleration_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.acceleration_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = 
            dimensional_exponents ( 1.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0 );</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.amount_of_substance_measure_with_unit">ENTITY <b>amount_of_substance_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.amount_of_substance_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.amount_of_substance_unit">ENTITY <b>amount_of_substance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.amount_of_substance_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.area_measure_with_unit">ENTITY <b>area_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.area_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.AREA_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.area_unit">ENTITY <b>area_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.area_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = 
            dimensional_exponents ( 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 );</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.capacitance_measure_with_unit">ENTITY <b>capacitance_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.capacitance_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.CAPACITANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.capacitance_unit">ENTITY <b>capacitance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.capacitance_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.farad);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.celsius_temperature_measure_with_unit">ENTITY <b>celsius_temperature_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.celsius_temperature_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.conductance_measure_with_unit">ENTITY <b>conductance_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.conductance_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.CONDUCTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.conductance_unit">ENTITY <b>conductance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.conductance_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.siemens);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.context_dependent_unit">ENTITY <b>context_dependent_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>
         &nbsp;&nbsp;<A NAME="measure_schema.context_dependent_unit.name">name : </A><A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema.label">label</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.conversion_based_unit">ENTITY <b>conversion_based_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>
         &nbsp;&nbsp;<A NAME="measure_schema.conversion_based_unit.name">name : </A><A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema.label">label</A>;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.conversion_based_unit.conversion_factor">conversion_factor : </A><A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.conversion_based_unit.wr:wr1">WR1: SELF\named_unit.dimensions = derive_dimensional_exponents(conversion_factor\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.derived_unit">ENTITY <b>derived_unit</b></A><br>
         &nbsp;&nbsp;SUPERTYPE OF 
         (ONEOF&nbsp;(<A HREF="#measure_schema.absorbed_dose_unit">absorbed_dose_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.acceleration_unit">acceleration_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.radioactivity_unit">radioactivity_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.area_unit">area_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.capacitance_unit">capacitance_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.dose_equivalent_unit">dose_equivalent_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_charge_unit">electric_charge_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.conductance_unit">conductance_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_potential_unit">electric_potential_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.energy_unit">energy_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.magnetic_flux_density_unit">magnetic_flux_density_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.force_unit">force_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.frequency_unit">frequency_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.illuminance_unit">illuminance_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.inductance_unit">inductance_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.magnetic_flux_unit">magnetic_flux_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.power_unit">power_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.pressure_unit">pressure_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.resistance_unit">resistance_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.velocity_unit">velocity_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.volume_unit">volume_unit</A>));<br>
         &nbsp;&nbsp;<A NAME="measure_schema.derived_unit.elements">elements : </A>SET[1:?] OF <A HREF="#measure_schema.derived_unit_element">derived_unit_element</A>;<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.derived_unit.name">name : </A><A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema.label">label</A> := get_name_value(SELF);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.derived_unit.wr:wr1">WR1: (SIZEOF(elements) &gt; 1) OR ((SIZEOF(elements) = 1) AND (elements[1].exponent &lt;&gt; 1.0));</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.derived_unit.wr:wr2">WR2: SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.derived_unit_element">ENTITY <b>derived_unit_element</b></A>;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.derived_unit_element.unit">unit : </A><A HREF="#measure_schema.named_unit">named_unit</A>;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.derived_unit_element.exponent">exponent : </A>REAL;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.dimensional_exponents">ENTITY <b>dimensional_exponents</b></A>;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.length_exponent">length_exponent : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.mass_exponent">mass_exponent : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.time_exponent">time_exponent : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.electric_current_exponent">electric_current_exponent : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.thermodynamic_temperature_exponent">thermodynamic_temperature_exponent : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.amount_of_substance_exponent">amount_of_substance_exponent : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dimensional_exponents.luminous_intensity_exponent">luminous_intensity_exponent : </A>REAL;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.dose_equivalent_measure_with_unit">ENTITY <b>dose_equivalent_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dose_equivalent_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.DOSE_EQUIVALENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.dose_equivalent_unit">ENTITY <b>dose_equivalent_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.dose_equivalent_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.sievert);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.electric_charge_measure_with_unit">ENTITY <b>electric_charge_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.electric_charge_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ELECTRIC_CHARGE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.electric_charge_unit">ENTITY <b>electric_charge_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.electric_charge_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.coulomb);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.electric_current_measure_with_unit">ENTITY <b>electric_current_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.electric_current_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.electric_current_unit">ENTITY <b>electric_current_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.electric_current_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.electric_potential_measure_with_unit">ENTITY <b>electric_potential_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.electric_potential_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ELECTRIC_POTENTIAL_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.electric_potential_unit">ENTITY <b>electric_potential_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.electric_potential_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.volt);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.energy_measure_with_unit">ENTITY <b>energy_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.energy_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ENERGY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.energy_unit">ENTITY <b>energy_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.energy_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.joule);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.force_measure_with_unit">ENTITY <b>force_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.force_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.FORCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.force_unit">ENTITY <b>force_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.force_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.newton);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.frequency_measure_with_unit">ENTITY <b>frequency_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.frequency_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.FREQUENCY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.frequency_unit">ENTITY <b>frequency_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.frequency_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.hertz);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.global_unit_assigned_context">ENTITY <b>global_unit_assigned_context</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.representation_context">representation_context</A>);<br>
         &nbsp;&nbsp;<A NAME="measure_schema.global_unit_assigned_context.units">units : </A>SET[1:?] OF <A HREF="#measure_schema.unit">unit</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.illuminance_measure_with_unit">ENTITY <b>illuminance_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.illuminance_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.ILLUMINANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.illuminance_unit">ENTITY <b>illuminance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.illuminance_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.lux);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.inductance_measure_with_unit">ENTITY <b>inductance_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.inductance_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.INDUCTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.inductance_unit">ENTITY <b>inductance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.inductance_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.henry);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.length_measure_with_unit">ENTITY <b>length_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.length_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.LENGTH_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.length_unit">ENTITY <b>length_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.length_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 1.0) AND 
            (SELF\named_unit.dimensions.mass_exponent = 0.0) AND 
            (SELF\named_unit.dimensions.time_exponent = 0.0) AND 
            (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND 
            (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND 
            (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND 
            (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.luminous_flux_measure_with_unit">ENTITY <b>luminous_flux_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.luminous_flux_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.LUMINOUS_FLUX_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.luminous_flux_unit">ENTITY <b>luminous_flux_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.luminous_flux_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.lumen);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.luminous_intensity_measure_with_unit">ENTITY <b>luminous_intensity_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.luminous_intensity_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.luminous_intensity_unit">ENTITY <b>luminous_intensity_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.luminous_intensity_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 1.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.magnetic_flux_density_measure_with_unit">ENTITY <b>magnetic_flux_density_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.magnetic_flux_density_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.MAGNETIC_FLUX_DENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.magnetic_flux_density_unit">ENTITY <b>magnetic_flux_density_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.magnetic_flux_density_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.tesla);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.magnetic_flux_measure_with_unit">ENTITY <b>magnetic_flux_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.magnetic_flux_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.MAGNETIC_FLUX_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.magnetic_flux_unit">ENTITY <b>magnetic_flux_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.magnetic_flux_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.weber);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.mass_measure_with_unit">ENTITY <b>mass_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.mass_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.MASS_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.mass_unit">ENTITY <b>mass_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.mass_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 1.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.measure_with_unit">ENTITY <b>measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUPERTYPE OF 
         (ONEOF&nbsp;(<A HREF="#measure_schema.length_measure_with_unit">length_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.mass_measure_with_unit">mass_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.time_measure_with_unit">time_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_current_measure_with_unit">electric_current_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.thermodynamic_temperature_measure_with_unit">thermodynamic_temperature_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.celsius_temperature_measure_with_unit">celsius_temperature_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.amount_of_substance_measure_with_unit">amount_of_substance_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.luminous_intensity_measure_with_unit">luminous_intensity_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.plane_angle_measure_with_unit">plane_angle_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.solid_angle_measure_with_unit">solid_angle_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.area_measure_with_unit">area_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.volume_measure_with_unit">volume_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.ratio_measure_with_unit">ratio_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.acceleration_measure_with_unit">acceleration_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.capacitance_measure_with_unit">capacitance_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_charge_measure_with_unit">electric_charge_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.conductance_measure_with_unit">conductance_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_potential_measure_with_unit">electric_potential_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.energy_measure_with_unit">energy_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.magnetic_flux_density_measure_with_unit">magnetic_flux_density_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.force_measure_with_unit">force_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.frequency_measure_with_unit">frequency_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.illuminance_measure_with_unit">illuminance_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.inductance_measure_with_unit">inductance_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.luminous_flux_measure_with_unit">luminous_flux_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.magnetic_flux_measure_with_unit">magnetic_flux_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.power_measure_with_unit">power_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.pressure_measure_with_unit">pressure_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.resistance_measure_with_unit">resistance_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.velocity_measure_with_unit">velocity_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.absorbed_dose_measure_with_unit">absorbed_dose_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.radioactivity_measure_with_unit">radioactivity_measure_with_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.dose_equivalent_measure_with_unit">dose_equivalent_measure_with_unit</A>));<br>
         &nbsp;&nbsp;<A NAME="measure_schema.measure_with_unit.value_component">value_component : </A><A HREF="#measure_schema.measure_value">measure_value</A>;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.measure_with_unit.unit_component">unit_component : </A><A HREF="#measure_schema.unit">unit</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.measure_with_unit.wr:wr1">WR1: valid_units(SELF);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.named_unit">ENTITY <b>named_unit</b></A><br>
         &nbsp;&nbsp;SUPERTYPE OF 
         (ONEOF&nbsp;(<A HREF="#measure_schema.si_unit">si_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.conversion_based_unit">conversion_based_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.context_dependent_unit">context_dependent_unit</A>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANDOR&nbsp;ONEOF&nbsp;(<A HREF="#measure_schema.length_unit">length_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.mass_unit">mass_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.time_unit">time_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.electric_current_unit">electric_current_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.thermodynamic_temperature_unit">thermodynamic_temperature_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.amount_of_substance_unit">amount_of_substance_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.luminous_flux_unit">luminous_flux_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.luminous_intensity_unit">luminous_intensity_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.plane_angle_unit">plane_angle_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.solid_angle_unit">solid_angle_unit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#measure_schema.ratio_unit">ratio_unit</A>));<br>
         &nbsp;&nbsp;<A NAME="measure_schema.named_unit.dimensions">dimensions : </A><A HREF="#measure_schema.dimensional_exponents">dimensional_exponents</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.plane_angle_measure_with_unit">ENTITY <b>plane_angle_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.plane_angle_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.plane_angle_unit">ENTITY <b>plane_angle_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.plane_angle_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.power_measure_with_unit">ENTITY <b>power_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.power_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.POWER_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.power_unit">ENTITY <b>power_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.power_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.watt);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.pressure_measure_with_unit">ENTITY <b>pressure_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.pressure_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.PRESSURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.pressure_unit">ENTITY <b>pressure_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.pressure_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.pascal);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.radioactivity_measure_with_unit">ENTITY <b>radioactivity_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.radioactivity_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.RADIOACTIVITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.radioactivity_unit">ENTITY <b>radioactivity_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.radioactivity_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.becquerel);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.ratio_measure_with_unit">ENTITY <b>ratio_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.ratio_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.RATIO_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.ratio_unit">ENTITY <b>ratio_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.ratio_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.resistance_measure_with_unit">ENTITY <b>resistance_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.resistance_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.RESISTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.resistance_unit">ENTITY <b>resistance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.resistance_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.ohm);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_absorbed_dose_unit">ENTITY <b>si_absorbed_dose_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.absorbed_dose_unit">absorbed_dose_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_absorbed_dose_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.gray;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_absorbed_dose_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_capacitance_unit">ENTITY <b>si_capacitance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.capacitance_unit">capacitance_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_capacitance_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.farad;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_capacitance_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_conductance_unit">ENTITY <b>si_conductance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.conductance_unit">conductance_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_conductance_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.siemens;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_conductance_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_dose_equivalent_unit">ENTITY <b>si_dose_equivalent_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.dose_equivalent_unit">dose_equivalent_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_dose_equivalent_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.sievert;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_dose_equivalent_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_electric_charge_unit">ENTITY <b>si_electric_charge_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.electric_charge_unit">electric_charge_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_electric_charge_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.coulomb;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_electric_charge_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_electric_potential_unit">ENTITY <b>si_electric_potential_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.electric_potential_unit">electric_potential_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_electric_potential_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.volt;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_electric_potential_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_energy_unit">ENTITY <b>si_energy_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.energy_unit">energy_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_energy_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.joule;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_energy_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_force_unit">ENTITY <b>si_force_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.force_unit">force_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_force_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.newton;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_force_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_frequency_unit">ENTITY <b>si_frequency_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.frequency_unit">frequency_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_frequency_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.hertz;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_frequency_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_illuminance_unit">ENTITY <b>si_illuminance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.illuminance_unit">illuminance_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_illuminance_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.lux;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_illuminance_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_inductance_unit">ENTITY <b>si_inductance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.inductance_unit">inductance_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_inductance_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.henry;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_inductance_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_magnetic_flux_density_unit">ENTITY <b>si_magnetic_flux_density_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.magnetic_flux_density_unit">magnetic_flux_density_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_magnetic_flux_density_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.tesla;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_magnetic_flux_density_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_magnetic_flux_unit">ENTITY <b>si_magnetic_flux_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.magnetic_flux_unit">magnetic_flux_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_magnetic_flux_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.weber;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_magnetic_flux_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_power_unit">ENTITY <b>si_power_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.power_unit">power_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_power_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.watt;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_power_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_pressure_unit">ENTITY <b>si_pressure_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.pressure_unit">pressure_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_pressure_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.pascal;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_pressure_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_radioactivity_unit">ENTITY <b>si_radioactivity_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.radioactivity_unit">radioactivity_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_radioactivity_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.becquerel;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_radioactivity_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_resistance_unit">ENTITY <b>si_resistance_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.resistance_unit">resistance_unit</A>, <A HREF="#measure_schema.si_unit">si_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_resistance_unit.wr:wr1">WR1: SELF\si_unit.name = si_unit_name.ohm;</A><br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_resistance_unit.wr:wr2">WR2: NOT EXISTS(SELF\derived_unit.name);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.si_unit">ENTITY <b>si_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_unit.prefix">prefix : </A>
         OPTIONAL 
         <A HREF="#measure_schema.si_prefix">si_prefix</A>;<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_unit.name">name : </A><A HREF="#measure_schema.si_unit_name">si_unit_name</A>;<br>DERIVE<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.named_unit">named_unit</A>.<A NAME="measure_schema.si_unit.dimensions">dimensions : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.dimensional_exponents">dimensional_exponents</A> := dimensions_for_si_unit(name);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.si_unit.wr:wr1">WR1: NOT(('MEASURE_SCHEMA.MASS_UNIT' IN TYPEOF(SELF)) AND
            (SIZEOF(USEDIN(SELF,'MEASURE_SCHEMA.DERIVED_UNIT_ELEMENT.UNIT')) &gt; 0)) OR
            (prefix = si_prefix.kilo);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.solid_angle_measure_with_unit">ENTITY <b>solid_angle_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.solid_angle_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.solid_angle_unit">ENTITY <b>solid_angle_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.solid_angle_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.thermodynamic_temperature_measure_with_unit">ENTITY <b>thermodynamic_temperature_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.thermodynamic_temperature_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.thermodynamic_temperature_unit">ENTITY <b>thermodynamic_temperature_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.thermodynamic_temperature_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 1.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.time_measure_with_unit">ENTITY <b>time_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.time_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.TIME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.time_unit">ENTITY <b>time_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.named_unit">named_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.time_unit.wr:wr1">WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent
            = 1.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent
            = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent
            = 0.0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.velocity_measure_with_unit">ENTITY <b>velocity_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.velocity_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.VELOCITY_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.velocity_unit">ENTITY <b>velocity_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.velocity_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = 
            dimensional_exponents ( 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 );</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.volume_measure_with_unit">ENTITY <b>volume_measure_with_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.measure_with_unit">measure_with_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.volume_measure_with_unit.wr:wr1">WR1: 'MEASURE_SCHEMA.VOLUME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.volume_unit">ENTITY <b>volume_unit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#measure_schema.derived_unit">derived_unit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="measure_schema.volume_unit.wr:wr1">WR1: derive_dimensional_exponents(SELF) = 
            dimensional_exponents ( 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 );</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="measure_schema.derive_dimensional_exponents">FUNCTION <b>derive_dimensional_exponents</b></A><br>&nbsp;(x : <A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.unit">unit</A>) : <A HREF="#measure_schema.dimensional_exponents">dimensional_exponents</A>;
         </code><pre>LOCAL
      result : dimensional_exponents := dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    END_LOCAL;

    IF 'MEASURE_SCHEMA.DERIVED_UNIT' IN TYPEOF(x) THEN
      REPEAT i := LOINDEX(x\derived_unit.elements) TO HIINDEX(x\derived_unit.elements);
        result.length_exponent := result.length_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.length_exponent);
        result.mass_exponent := result.mass_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.mass_exponent);
        result.time_exponent := result.time_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.time_exponent);
        result.electric_current_exponent := result.electric_current_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.electric_current_exponent);
        result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.thermodynamic_temperature_exponent);
        result.amount_of_substance_exponent := result.amount_of_substance_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.amount_of_substance_exponent);
        result.luminous_intensity_exponent := result.luminous_intensity_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.luminous_intensity_exponent);
      END_REPEAT;
    ELSE
      result := x\named_unit.dimensions;
    END_IF;
    RETURN (result);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="measure_schema.dimensions_for_si_unit">FUNCTION <b>dimensions_for_si_unit</b></A><br>&nbsp;(n : <A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.si_unit_name">si_unit_name</A>) : <A HREF="#measure_schema.dimensional_exponents">dimensional_exponents</A>;
         </code><pre>CASE n OF 
      metre:
        RETURN (dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      gram:
        RETURN (dimensional_exponents(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      second:
        RETURN (dimensional_exponents(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
      ampere:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
      kelvin:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
      mole:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
      candela:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
      radian:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      steradian:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      hertz:
        RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
      newton:
        RETURN (dimensional_exponents(1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      pascal:
        RETURN (dimensional_exponents(-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      joule:
        RETURN (dimensional_exponents(2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      watt:
        RETURN (dimensional_exponents(2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
      coulomb:
        RETURN (dimensional_exponents(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
      volt:
        RETURN (dimensional_exponents(2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
      farad:
        RETURN (dimensional_exponents(-2.0, -1.0, 4.0, 2.0, 0.0, 0.0, 0.0));
      ohm:
        RETURN (dimensional_exponents(2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
      siemens:
        RETURN (dimensional_exponents(-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
      weber:
        RETURN (dimensional_exponents(2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
      tesla:
        RETURN (dimensional_exponents(0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
      henry:
        RETURN (dimensional_exponents(2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
      degree_Celsius:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
      lumen:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
      lux:
        RETURN (dimensional_exponents(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
      becquerel:
        RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
      gray:
        RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      sievert:
        RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      OTHERWISE:
        RETURN (?);
    END_CASE;</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="measure_schema.valid_units">FUNCTION <b>valid_units</b></A><br>&nbsp;(m : <A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.measure_with_unit">measure_with_unit</A>) : BOOLEAN;
         </code><pre>IF 'MEASURE_SCHEMA.LENGTH_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.MASS_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.TIME_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.ELECTRIC_CURRENT_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.THERMODYNAMIC_TEMPERATURE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.CELSIUS_TEMPERATURE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.AMOUNT_OF_SUBSTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.LUMINOUS_INTENSITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.SOLID_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.AREA_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.VOLUME_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.RATIO_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.POSITIVE_LENGTH_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.POSITIVE_PLANE_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.ACCELERATION_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 1.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
     IF 'MEASURE_SCHEMA.CAPACITANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( -2.0, -1.0, 4.0, 2.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.ELECTRIC_CHARGE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
        IF 'MEASURE_SCHEMA.CONDUCTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
          IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
            dimensional_exponents( -2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0 ) THEN
            RETURN (FALSE);
          END_IF;
    END_IF;
        IF 'MEASURE_SCHEMA.ELECTRIC_POTENTIAL_MEASURE' IN TYPEOF(m.value_component) THEN
          IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
            dimensional_exponents( 2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0 ) THEN
            RETURN (FALSE);
          END_IF;
    END_IF;    
    IF 'MEASURE_SCHEMA.ENERGY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.FORCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.FREQUENCY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.ILLUMINANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( -2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
     IF 'MEASURE_SCHEMA.INDUCTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.LUMINOUS_FLUX_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.MAGNETIC_FLUX_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
     IF 'MEASURE_SCHEMA.MAGNETIC_FLUX_DENSITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.POWER_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.PRESSURE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( -1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.RESISTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.VELOCITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents( 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.RADIOACTIVITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.ABSORBED_DOSE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'MEASURE_SCHEMA.DOSE_EQUIVALENT_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) &lt;&gt; 
        dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    RETURN (TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br>
         END_SCHEMA;&nbsp;&nbsp;--&nbsp;measure_schema<br></code></body>
</HTML>