
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <link rel="schema.DC" href="http://www.dublincore.org/documents/2003/02/04/dces/">
      <META name="DC.Title" content="Product data representation and exchange: Application module: Physical connectivity definition">
      <META name="DC.Dates" content="2009-05-27 11:06:20">
      <META name="DC.Published" content="2009-07-01">
      <META name="DC.Contributor" content="Nettles, Darla">
      <META name="DC.Creator" content="Thurman, Thomas">
      <META name="DC.Description" content="The application module Physical connectivity definition">
      <META name="DC.Subject" content="module, electrical, network listing, packaging, elaborated network, network tree, design constraint">
      <META name="DC.Identifier" content="ISO TC184/SC4/WG12 N6494">
      <META name="DC.Replaces" content="ISO TC184/SC4/WG12 N5823">
      <META name="SC4.version" content="2">
      <META name="SC4.checklist.internal_review" content="ISO TC184/SC4/WG12 N6566">
      <META name="SC4.checklist.project_leader" content="ISO TC184/SC4/WG12 N6567">
      <META name="SC4.checklist.convener" content="ISO TC184/SC4/WG12 N6568">
      <META name="STEPMOD.module.rcs.date" content="Date: 2009-05-27 11:06:20">
      <META name="STEPMOD.module.rcs.revision" content="Revision: 1.49">
      <META name="PART1000.module.rcs.revision" content="$Revision: $">
      <META name="PART1000.module.rcs.date" content="$Date: $">
      <META name="STEPMOD.arm.rcs.revision" content="Revision: 1.53">
      <META name="STEPMOD.mim.rcs.revision" content="Revision: 1.42">
      <TITLE>ISO/TS 10303-1755:2009 Physical connectivity definition</TITLE>
   </HEAD>
   <body>
      <TABLE cellspacing="0" border="0" width="100%">
         <TR>
            <TD><small></small></TD>
         </TR>
         <TR>
            <TD valign="MIDDLE"><B>
                  Application module:
                  Physical connectivity definition</B></TD>
            <TD valign="MIDDLE" align="RIGHT"><b>ISO/TS 10303-1755:2009(E) <br>
                  &copy; ISO
                  </b></TD>
         </TR>
      </TABLE>
      <TABLE border="1" cellspacing="1" width="100%">
         <TR>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/cover.htm">Cover page</A><BR><A HREF="../sys/contents.htm">Table of contents</A><BR><A HREF="../sys/cover.htm#copyright">Copyright</A><BR><A HREF="../sys/foreword.htm">Foreword</A><BR><A HREF="../sys/introduction.htm">Introduction</A><BR><A HREF="../sys/1_scope.htm">1 Scope</A><BR><A HREF="../sys/2_refs.htm">2 Normative references</A><BR><A HREF="../sys/3_defs.htm">
                     3 Terms, definitions and abbreviations
                     </A></p>
            </TD>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/4_info_reqs.htm">4 Information requirements</A><BR><small>          
                     &nbsp; &nbsp;<A HREF="../sys/4_info_reqs.htm#interfaces">4.1 Required AM ARMs</A><BR>
                     &nbsp; &nbsp;<A HREF="../sys/4_info_reqs.htm#types">4.2 ARM type definitions</A><BR>
                     &nbsp; &nbsp;<A HREF="../sys/4_info_reqs.htm#entities">4.3 ARM entity definitions</A><BR>
                     &nbsp; &nbsp;<A HREF="../sys/4_info_reqs.htm#functions">4.4 ARM function definitions</A><BR></small><A HREF="../sys/5_main.htm">5 Module interpreted model</A><BR><small>
                     &nbsp; &nbsp;<A HREF="../sys/5_mapping.htm#mapping">5.1 Mapping specification</A><BR>
                     &nbsp; &nbsp;<A HREF="../sys/5_mim.htm#mim_express">5.2 MIM EXPRESS short listing</A><BR>
                     &nbsp; &nbsp; &nbsp;<A HREF="../sys/5_mim.htm#types">5.2.1 MIM type definitions</A><BR>
                     &nbsp; &nbsp; &nbsp;<A HREF="../sys/5_mim.htm#entities">5.2.2 MIM entity definitions</A><BR></small></p>
            </TD>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/a_short_names.htm">A MIM short names</A><BR><A HREF="../sys/b_obj_reg.htm">B Information object
                     registration</A><BR><A HREF="../sys/c_arm_expg.htm">
                     C ARM EXPRESS-G
                     </A>
                  &nbsp;&nbsp;<a href="../armexpg1.htm"><img align="middle" border="0" alt="EXPRESS-G" src="../../../../images/expg.gif"></a><br><A HREF="../sys/d_mim_expg.htm">
                     D MIM EXPRESS-G
                     </A>
                  &nbsp;&nbsp;<a href="../mimexpg1.htm"><img align="middle" border="0" alt="EXPRESS-G" src="../../../../images/expg.gif"></a><BR><A HREF="../sys/e_exp.htm">E Computer interpretable listings</A><BR><A HREF="../sys/biblio.htm#bibliography">Bibliography</A><BR><A HREF="../sys/modindex.htm">Index</A><BR></p>
            </TD>
         </TR>
      </TABLE>
      <H2><A NAME="annexe-arm-express"></A></H2><code>
         (*<br>ISO TC184/SC4/WG12&nbsp;N6495 - ISO/TS&nbsp;10303-1755 Physical connectivity definition - EXPRESS ARM<br>Supersedes 
         ISO TC184/SC4/WG12&nbsp;N5824<br>*)
         </code><br><code><br><br><a name="physical_connectivity_definition_arm">SCHEMA <b>Physical_connectivity_definition_arm</b>;</a><br><br></code><code>
         USE FROM
         <A HREF="../../../../data/modules/part_external_reference/sys/e_exp_arm.htm#part_external_reference_arm">Part_external_reference_arm</A>;
         &nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1711<br><br></code><code>
         USE FROM
         <A HREF="../../../../data/modules/physical_component_feature/sys/e_exp_arm.htm#physical_component_feature_arm">Physical_component_feature_arm</A>;
         &nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1721<br><br></code><code>
         USE FROM
         <A HREF="../../../../data/modules/requirement_decomposition/sys/e_exp_arm.htm#requirement_decomposition_arm">Requirement_decomposition_arm</A>;
         &nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1740<br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../../data/modules/requirement_decomposition/sys/e_exp_arm.htm#requirement_decomposition_arm">Requirement_decomposition_arm</A>&nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1740<br>&nbsp;&nbsp;(<A HREF="../../../../data/modules/requirement_decomposition/sys/e_exp_arm.htm#requirement_decomposition_arm.get_rvd">get_rvd</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../../data/modules/characterizable_object/sys/e_exp_arm.htm#characterizable_object_arm">Characterizable_object_arm</A>&nbsp;&nbsp;&nbsp;-- ISO/TS&nbsp;10303-1765<br>&nbsp;&nbsp;(<A HREF="../../../../data/modules/characterizable_object/sys/e_exp_arm.htm#characterizable_object_arm.bag_to_set">bag_to_set</A>);
         <br><br></code><code><br><A NAME="physical_connectivity_definition_arm.pcd_documented_element_select">TYPE </A><b>pcd_documented_element_select</b> =
         
         EXTENSIBLE
         
         GENERIC_ENTITY
         
         
         SELECT
         BASED_ON
         <A HREF="../../../../data/modules/document_assignment/sys/e_exp_arm.htm#document_assignment_arm.documented_element_select">documented_element_select</A>
         WITH 
         <br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#physical_connectivity_definition_arm.physical_connectivity_element">Physical_connectivity_element</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="physical_connectivity_definition_arm.pcd_groupable_item">TYPE </A><b>pcd_groupable_item</b> =
         
         EXTENSIBLE
         
         GENERIC_ENTITY
         
         
         SELECT
         BASED_ON
         <A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.groupable_item">groupable_item</A>
         WITH 
         <br>
         &nbsp;&nbsp;&nbsp;(<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group_relationship">Group_relationship</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="physical_connectivity_definition_arm.pcd_requirement_assignment_item">TYPE </A><b>pcd_requirement_assignment_item</b> =
         
         EXTENSIBLE
         
         GENERIC_ENTITY
         
         
         SELECT
         BASED_ON
         <A HREF="../../../../data/modules/requirement_assignment/sys/e_exp_arm.htm#requirement_assignment_arm.requirement_assignment_item">requirement_assignment_item</A>
         WITH 
         <br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition_relationship">Physical_connectivity_definition_relationship</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#physical_connectivity_definition_arm.physical_connectivity_element">Physical_connectivity_element</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_domain_enumeration">TYPE </A><b>physical_connectivity_definition_domain_enumeration</b> =
         
         EXTENSIBLE
         
         ENUMERATION
         
         OF
         <br>
         &nbsp;&nbsp; 
         (electrical,<br>&nbsp;&nbsp;&nbsp;&nbsp;thermal,<br>&nbsp;&nbsp;&nbsp;&nbsp;optical,<br>&nbsp;&nbsp;&nbsp;&nbsp;magnetic);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="physical_connectivity_definition_arm.termination_or_junction">TYPE </A><b>termination_or_junction</b> =
         
         EXTENSIBLE
         
         GENERIC_ENTITY
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="../../../../data/modules/component_feature/sys/e_exp_arm.htm#component_feature_arm.component_terminal">Component_terminal</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#physical_connectivity_definition_arm.topological_junction">Topological_junction</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_definition">ENTITY <b>Physical_connectivity_definition</b></A><br>
         &nbsp;&nbsp;SUPERTYPE OF 
         (<A HREF="#physical_connectivity_definition_arm.physical_connectivity_structure_definition">Physical_connectivity_structure_definition</A>)<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../../data/modules/shape_property_assignment/sys/e_exp_arm.htm#shape_property_assignment_arm.shape_element">Shape_element</A>);<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition.associated_terminals">associated_terminals : </A>SET[2:?] OF <A HREF="../../../../data/modules/physical_component_feature/sys/e_exp_arm.htm#physical_component_feature_arm.physical_component_terminal">Physical_component_terminal</A>;<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/shape_property_assignment/sys/e_exp_arm.htm#shape_property_assignment_arm.shape_element">Shape_element</A>.<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition.element_name">element_name : </A>STRING;<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/shape_property_assignment/sys/e_exp_arm.htm#shape_property_assignment_arm.shape_element">Shape_element</A>.containing_shape&nbsp;RENAMED&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition.associated_definition">associated_definition : </A><A HREF="#physical_connectivity_definition_arm.physical_unit_network_definition">Physical_unit_network_definition</A>;<br>INVERSE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition.domain">domain : </A>SET[0:1] OF <A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition_domain">Physical_connectivity_definition_domain</A> FOR associated_definition;<br>UNIQUE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition.ur:ur1">UR1: </A>element_name, associated_definition;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_domain">ENTITY <b>Physical_connectivity_definition_domain</b></A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_domain.domain_type">domain_type : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition_domain_enumeration">physical_connectivity_definition_domain_enumeration</A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_domain.associated_definition">associated_definition : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_relationship">ENTITY <b>Physical_connectivity_definition_relationship</b></A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_relationship.first_definition">first_definition : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_relationship.second_definition">second_definition : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_relationship.purpose">purpose : </A>STRING;<br>INVERSE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_definition_relationship.requirement">requirement : </A>SET[1:1] OF <A HREF="../../../../data/modules/requirement_assignment/sys/e_exp_arm.htm#requirement_assignment_arm.requirement_assignment">Requirement_assignment</A> FOR assigned_to;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_element">ENTITY <b>Physical_connectivity_element</b></A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_element.name">name : </A>STRING;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_element.start_terminus">start_terminus : </A><A HREF="#physical_connectivity_definition_arm.termination_or_junction">termination_or_junction</A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_element.end_terminus">end_terminus : </A><A HREF="#physical_connectivity_definition_arm.termination_or_junction">termination_or_junction</A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_element.connectivity_context">connectivity_context : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_structure_definition">Physical_connectivity_structure_definition</A>;<br>UNIQUE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_element.ur:ur1">UR1: </A>name, connectivity_context;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_element.wr:wr1">WR1: start_terminus &lt;&gt; end_terminus;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_link">ENTITY <b>Physical_connectivity_layout_topology_link</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group_relationship">Group_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group_relationship">Group_relationship</A>.related_group&nbsp;RENAMED&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_link.subsequent_node">subsequent_node : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_layout_topology_node">Physical_connectivity_layout_topology_node</A>;<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group_relationship">Group_relationship</A>.relating_group&nbsp;RENAMED&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_link.precedent_node">precedent_node : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_layout_topology_node">Physical_connectivity_layout_topology_node</A>;<br>DERIVE<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group_relationship">Group_relationship</A>.<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_link.relation_type">relation_type : </A>STRING := '';<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_link.wr:wr1">WR1: acyclic_physical_connectivity_layout_topology_link(SELF, [subsequent_node], 
            'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.PHYSICAL_CONNECTIVITY_LAYOUT_TOPOLOGY_LINK');</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_node">ENTITY <b>Physical_connectivity_layout_topology_node</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group">Group</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group">Group</A>.name&nbsp;RENAMED&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_node.terminal_type">terminal_type : </A>STRING;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_node.wr:wr1">WR1: (SIZEOF(SELF\Group.elements) = 0);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement">ENTITY <b>Physical_connectivity_layout_topology_requirement</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group">Group</A>, <A HREF="../../../../data/modules/requirement_decomposition/sys/e_exp_arm.htm#requirement_decomposition_arm.predefined_requirement_view_definition">Predefined_requirement_view_definition</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/group/sys/e_exp_arm.htm#group_arm.group">Group</A>.<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement.elements">elements : </A>SET[1:?] OF <A HREF="#physical_connectivity_definition_arm.physical_connectivity_layout_topology_link">Physical_connectivity_layout_topology_link</A>;<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement.nodes">nodes : </A>SET[1:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_layout_topology_node">Physical_connectivity_layout_topology_node</A> := pcd_get_pcltn(elements);<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement.tree_structure">tree_structure : </A>LOGICAL := (SIZEOF(nodes) = (SIZEOF(elements) + 1));<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement.wr:wr1">WR1: (tree_structure = TRUE);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement_assignment">ENTITY <b>Physical_connectivity_layout_topology_requirement_assignment</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../../data/modules/requirement_assignment/sys/e_exp_arm.htm#requirement_assignment_arm.requirement_assignment">Requirement_assignment</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/requirement_assignment/sys/e_exp_arm.htm#requirement_assignment_arm.requirement_assignment">Requirement_assignment</A>.<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement_assignment.assigned_requirement">assigned_requirement : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement">Physical_connectivity_layout_topology_requirement</A>;<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../../data/modules/requirement_assignment/sys/e_exp_arm.htm#requirement_assignment_arm.requirement_assignment">Requirement_assignment</A>.<A NAME="physical_connectivity_definition_arm.physical_connectivity_layout_topology_requirement_assignment.assigned_to">assigned_to : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_make_from_relationship">ENTITY <b>Physical_connectivity_make_from_relationship</b></A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_make_from_relationship.reusable_definition">reusable_definition : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_make_from_relationship.resultant_definition">resultant_definition : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition">ENTITY <b>Physical_connectivity_structure_definition</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>);<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition.structural_terminal_nodes">structural_terminal_nodes : </A>SET[0:?] OF <A HREF="../../../../data/modules/physical_component_feature/sys/e_exp_arm.htm#physical_component_feature_arm.physical_component_terminal">Physical_component_terminal</A> := get_pct(structural_element);<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition.structural_junction_nodes">structural_junction_nodes : </A>SET[0:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.topological_junction">Topological_junction</A> := get_tj(structural_element);<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition.tree_structure">tree_structure : </A>LOGICAL := ((SIZEOF(structural_terminal_nodes) + SIZEOF(structural_junction_nodes)) = (SIZEOF(structural_element) + 1));<br>INVERSE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition.structural_element">structural_element : </A>SET[1:?] OF <A HREF="#physical_connectivity_definition_arm.physical_connectivity_element">Physical_connectivity_element</A> FOR connectivity_context;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition.wr:wr1">WR1: SIZEOF(QUERY(stn &lt;* structural_terminal_nodes |
            NOT(stn IN SELF\Physical_connectivity_definition.associated_terminals)
            )) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_connectivity_structure_definition.wr:wr2">WR2: SIZEOF(structural_terminal_nodes) = 
            SIZEOF(SELF\Physical_connectivity_definition.associated_terminals);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.physical_unit_network_definition">ENTITY <b>Physical_unit_network_definition</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../../data/modules/physical_unit_design_view/sys/e_exp_arm.htm#physical_unit_design_view_arm.part_design_view">Part_design_view</A>);<br>DERIVE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_unit_network_definition.terminals">terminals : </A>SET[0:?] OF <A HREF="../../../../data/modules/component_feature/sys/e_exp_arm.htm#component_feature_arm.component_terminal">Component_terminal</A> := get_terminals(bag_to_set(USEDIN(SELF,'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_DEFINITION')));<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_unit_network_definition.assembly">assembly : </A>SET[0:?] OF <A HREF="../../../../data/modules/product_view_definition/sys/e_exp_arm.htm#product_view_definition_arm.product_view_definition">Product_view_definition</A> := pcd_get_assemblies(terminals);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_unit_network_definition.wr:wr1">WR1: NOT (SIZEOF(terminals) &gt; 1) OR
            (SIZEOF(QUERY(t &lt;* terminals | NOT(SIZEOF(USEDIN(t, 'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.' + 
            'PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_TERMINALS')) = 1))) = 0);</A><br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.physical_unit_network_definition.wr:wr2">WR2: SIZEOF(QUERY( ass &lt;* assembly |
            (ass\Product_view_definition.defined_version = SELF\Product_view_definition.defined_version)
            )) &gt; 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.topological_junction">ENTITY <b>Topological_junction</b></A>;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.topological_junction.name">name : </A>STRING;<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.topological_junction.scope">scope : </A><A HREF="#physical_connectivity_definition_arm.physical_connectivity_structure_definition">Physical_connectivity_structure_definition</A>;<br>UNIQUE<br>
         &nbsp;&nbsp;<A NAME="physical_connectivity_definition_arm.topological_junction.ur:ur1">UR1: </A>name, scope;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="physical_connectivity_definition_arm.acyclic_physical_connectivity_layout_topology_link">FUNCTION <b>acyclic_physical_connectivity_layout_topology_link</b></A><br>&nbsp;(relation : <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_layout_topology_link">Physical_connectivity_layout_topology_link</A>; relatives : SET[1:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_layout_topology_node">Physical_connectivity_layout_topology_node</A>; specific_relation : STRING) : BOOLEAN;
         </code><pre>LOCAL
      x : SET OF Physical_connectivity_layout_topology_link := [];
    END_LOCAL;
    IF relation.precedent_node IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.precedent_node,
      'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.' +
      'PHYSICAL_CONNECTIVITY_LAYOUT_TOPOLOGY_LINK.' +
      'SUBSEQUENT_NODE')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_physical_connectivity_layout_topology_link(x[i], relatives +
        relation.precedent_node, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="physical_connectivity_definition_arm.get_pct">FUNCTION <b>get_pct</b></A><br>&nbsp;(input : SET[0:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_element">Physical_connectivity_element</A>) : SET[0:?] OF <A HREF="../../../../data/modules/physical_component_feature/sys/e_exp_arm.htm#physical_component_feature_arm.physical_component_terminal">Physical_component_terminal</A>;
         </code><pre>LOCAL
   pct : SET OF Physical_component_terminal := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].start_terminus)) THEN
   pct := pct + input[i].start_terminus;
   END_IF;
   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].end_terminus)) THEN
   pct := pct + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(pct);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="physical_connectivity_definition_arm.get_terminals">FUNCTION <b>get_terminals</b></A><br>&nbsp;(input : SET[0:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_definition">Physical_connectivity_definition</A>) : SET[0:?] OF <A HREF="../../../../data/modules/component_feature/sys/e_exp_arm.htm#component_feature_arm.component_terminal">Component_terminal</A>;
         </code><pre>LOCAL
   ct : SET OF Component_terminal := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   ct := ct + input[i].associated_terminals;
  END_REPEAT;
  RETURN(ct);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="physical_connectivity_definition_arm.get_tj">FUNCTION <b>get_tj</b></A><br>&nbsp;(input : SET[0:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_element">Physical_connectivity_element</A>) : SET[0:?] OF <A HREF="#physical_connectivity_definition_arm.topological_junction">Topological_junction</A>;
         </code><pre>LOCAL
   tj : SET OF Topological_junction := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   IF ('PHYSICAL_CONNECTIVITY_DEFINITION_ARM.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].start_terminus)) THEN
   tj := tj + input[i].start_terminus;
   END_IF;
   IF ('PHYSICAL_CONNECTIVITY_DEFINITION_ARM.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].end_terminus)) THEN
   tj := tj + input[i].end_terminus;
   END_IF;
  END_REPEAT;
  RETURN(tj);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="physical_connectivity_definition_arm.pcd_get_assemblies">FUNCTION <b>pcd_get_assemblies</b></A><br>&nbsp;(input : SET[0:?] OF <A HREF="../../../../data/modules/component_feature/sys/e_exp_arm.htm#component_feature_arm.component_terminal">Component_terminal</A>) : SET[0:?] OF <A HREF="../../../../data/modules/product_view_definition/sys/e_exp_arm.htm#product_view_definition_arm.product_view_definition">Product_view_definition</A>;
         </code><pre>LOCAL
      ac : SET OF Assembly_component := [];
     pvd : SET OF Product_view_definition := [];
    END_LOCAL;
   REPEAT i := 1 TO HIINDEX(input) BY 1;
      ac := ac + input[i]\Component_feature.associated_component;
   END_REPEAT;
   REPEAT i := 1 to HIINDEX(ac) BY 1;
     pvd  := pvd + ac[i]\Assembly_component.assemblies;
   END_REPEAT;
   RETURN(pvd);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="physical_connectivity_definition_arm.pcd_get_pcltn">FUNCTION <b>pcd_get_pcltn</b></A><br>&nbsp;(input : SET[0:?] OF <A HREF="../../../../data/modules/physical_connectivity_definition/sys/e_exp_arm.htm#physical_connectivity_definition_arm.physical_connectivity_layout_topology_link">Physical_connectivity_layout_topology_link</A>) : SET[0:?] OF <A HREF="#physical_connectivity_definition_arm.physical_connectivity_layout_topology_node">Physical_connectivity_layout_topology_node</A>;
         </code><pre>LOCAL
   pcltn : SET OF Physical_connectivity_layout_topology_node := [];
    i : INTEGER := 0;
  END_LOCAL;
  REPEAT  i := 1 TO SIZEOF(input) BY 1;
   pcltn := pcltn + input[i].precedent_node + input[i].subsequent_node;
  END_REPEAT;
  RETURN(pcltn);</pre><code>
         END_FUNCTION;
         </code><br><code><br>
         END_SCHEMA;&nbsp;&nbsp;--&nbsp;Physical_connectivity_definition_arm<br></code><br><br><p>&copy; ISO 2009 &#8212; All rights reserved</p>
   </body>
</HTML>