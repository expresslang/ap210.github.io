
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <link rel="schema.DC" href="http://www.dublincore.org/documents/2003/02/04/dces/">
      <META name="DC.Title" content="&#xA;  Application interpreted construct">
      <META name="DC.Dates" content="2010/06/01 21:07:30">
      <META name="DC.Published" content="2010-01-01">
      <META name="DC.Contributor" content="Klein, Lothar">
      <META name="DC.Creator" content="Frechette, Simon">
      <META name="DC.Description" content="The integrated resource geometrically_bounded_2d_wireframe">
      <META name="DC.Subject" content="STEP, ISO 10303, integrated resource, bounded, curve, point, 2D wireframe, application interpreted construct.">
      <META name="DC.Identifier" content="ISO TC184/SC4/WG12&nbsp;N6158">
      <META name="DC.Replaces" content="ISO TC184/SC4/WG12 N5245">
      <META name="SC4.version" content="2">
      <META name="SC4.checklist.internal_review" content="ISO TC184/SC4/WG12 N6160">
      <META name="SC4.checklist.project_leader" content="ISO TC184/SC4/WG12 N6161">
      <META name="SC4.checklist.convener" content="ISO TC184/SC4/WG12 N6162">
      <META name="STEPMOD.resource.rcs.date" content="Date: 2010/06/01 21:07:30 ">
      <META name="STEPMOD.resource.rcs.revision" content="Revision: 1.16 ">
      <TITLE>ISO 10303-503:2010(E) </TITLE>
   </HEAD>
   <BODY>
      <TABLE cellspacing="0" border="0" width="100%">
         <TR>
            <TD><small></small></TD>
         </TR>
         <TR>
            <TD valign="MIDDLE"><B>
                  	  Application interpreted construct: Geometrically bounded 2d wireframe</B></TD>
            <TD valign="MIDDLE" align="RIGHT"><b>ISO 10303-503:2010(E) <br>
                  &copy; ISO
                  </b></TD>
         </TR>
      </TABLE>
      <TABLE border="1" cellspacing="1" width="100%">
         <TR>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/cover.htm">Cover page</A><BR><A HREF="../sys/contents.htm">Table of contents</A><BR><A HREF="../sys/cover.htm#copyright">Copyright</A><BR><A HREF="../sys/foreword.htm">Foreword</A><BR><A HREF="../sys/introduction.htm">Introduction</A><BR><A HREF="../sys/1_scope.htm">1 Scope</A><BR><A HREF="../sys/2_refs.htm">2 Normative references</A><BR><A HREF="../sys/3_defs.htm">
                     3 Terms and abbreviated terms
                     </A><br>
                  &nbsp; &nbsp;
                  <a href="../sys/3_defs.htm#termsdefns">3.1 Terms and definitions</a><br>
                  &nbsp; &nbsp;
                  <a href="../sys/3_defs.htm#abbrv">3.2 Abbreviated terms</a><br></p>
            </TD>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/4_schema.htm">4 EXPRESS short listing</A><BR><small>
                     &nbsp; &nbsp;<A HREF="../sys/4_schema.htm#intro">4.1 Introduction</A><BR>
                     
                     
                     &nbsp; &nbsp;<A HREF="../sys/4_schema.htm#funcon">4.2 Fundamental concepts and assumptions</A><BR>
                     				&nbsp; &nbsp;<A HREF="../sys/4_schema.htm#entities">4.3 Geometrically bounded 2d wireframe entity definition</A><BR>
                     &nbsp; &nbsp;<A HREF="../sys/4_schema.htm#functions">4.4 Geometrically bounded 2d wireframe function definitions</A><BR></small></p>
            </TD>
            <TD valign="TOP">
               <p class="toc"><A HREF="../sys/a_short_names.htm">A Short names of entities</A><BR><A HREF="../sys/b_obj_reg.htm">B Information object
                     registration</A><BR><A HREF="../sys/c_exp.htm">C Computer interpretable listings</A><BR><A HREF="../sys/d_expg.htm">
                     D EXPRESS-G diagrams
                     </A><BR><A HREF="../sys/biblio.htm#bibliography">Bibliography</A><BR><A HREF="../sys/resdocindex.htm">Index</A><BR></p>
            </TD>
         </TR>
      </TABLE>
      <H2><A NAME="annexc-express"></A></H2><code>
         (*<br>ISO TC184/SC4/WG12 N6159 - ISO 10303-503 Geometrically bounded 2d wireframe - EXPRESS<br>Supersedes 
         ISO TC184/SC4/WG12&nbsp;N5246<br>*)
         </code><br><code><br><br><a name="aic_geometrically_bounded_2d_wireframe">
            SCHEMA <b>aic_geometrically_bounded_2d_wireframe</b>;</a><br><br></code><code>
         USE FROM
         <A HREF="../../../../data/resources/geometric_model_schema/geometric_model_schema.htm#geometric_model_schema">geometric_model_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-42<br>&nbsp;&nbsp;(geometric_curve_set,<br>
         &nbsp;&nbsp;
         geometric_set);
         <br><br></code><code>
         USE FROM
         <A HREF="../../../../data/resources/geometry_schema/geometry_schema.htm#geometry_schema">geometry_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-42<br>&nbsp;&nbsp;(axis2_placement_2d,<br>
         &nbsp;&nbsp;
         b_spline_curve_with_knots,<br>
         &nbsp;&nbsp;
         bezier_curve,<br>
         &nbsp;&nbsp;
         circle,<br>
         &nbsp;&nbsp;
         composite_curve,<br>
         &nbsp;&nbsp;
         composite_curve_segment,<br>
         &nbsp;&nbsp;
         curve,<br>
         &nbsp;&nbsp;
         curve_replica,<br>
         &nbsp;&nbsp;
         ellipse,<br>
         &nbsp;&nbsp;
         geometric_representation_context,<br>
         &nbsp;&nbsp;
         hyperbola,<br>
         &nbsp;&nbsp;
         line,<br>
         &nbsp;&nbsp;
         offset_curve_2d,<br>
         &nbsp;&nbsp;
         parabola,<br>
         &nbsp;&nbsp;
         point_on_curve,<br>
         &nbsp;&nbsp;
         polyline,<br>
         &nbsp;&nbsp;
         quasi_uniform_curve,<br>
         &nbsp;&nbsp;
         rational_b_spline_curve,<br>
         &nbsp;&nbsp;
         trimmed_curve,<br>
         &nbsp;&nbsp;
         uniform_curve);
         <br><br></code><code>
         USE FROM
         <A HREF="../../../../data/resources/product_property_representation_schema/product_property_representation_schema.htm#product_property_representation_schema">product_property_representation_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-41<br>&nbsp;&nbsp;(shape_representation);
         <br><br></code><code>
         USE FROM
         <A HREF="../../../../data/resources/representation_schema/representation_schema.htm#representation_schema">representation_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-43<br>&nbsp;&nbsp;(mapped_item);
         <br><br></code><code><br><A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation">ENTITY <b>geometrically_bounded_2d_wireframe_representation</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (shape_representation);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr1">WR1: SELF.context_of_items\geometric_representation_context.
            coordinate_space_dimension = 2;</A><br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr2">WR2: SIZEOF (QUERY (item &lt;* SELF.items |
            NOT (SIZEOF (TYPEOF (item) *
            ['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET',          
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.AXIS2_PLACEMENT_2D',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.MAPPED_ITEM']) = 1)
            )) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr3">WR3: SIZEOF (QUERY (item &lt;* SELF.items |
            SIZEOF (TYPEOF (item) *          
            ['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.MAPPED_ITEM']) = 1
            )) &gt;= 1;</A><br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr4">WR4: SIZEOF (QUERY (mi &lt;* QUERY (item &lt;* SELF.items |
            ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.MAPPED_ITEM'
            IN TYPEOF (item))) |
            NOT ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.' +
            'GEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION'
            IN TYPEOF
            (mi\mapped_item.mapping_source.mapped_representation))
            )) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr5">WR5: SIZEOF (QUERY (gcs &lt;* QUERY (item &lt;* SELF.items |
            ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET'
            IN TYPEOF (item))) |
            NOT (SIZEOF (QUERY (elem &lt;* gcs\geometric_set.elements |
            NOT (SIZEOF (TYPEOF (elem) *
            ['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.B_SPLINE_CURVE',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CIRCLE',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.COMPOSITE_CURVE',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.ELLIPSE',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.OFFSET_CURVE_2D',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POINT',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POLYLINE',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.TRIMMED_CURVE']) =
            1)
            )) = 0)
            )) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr6">WR6: SIZEOF (QUERY (gcs &lt;* QUERY (item &lt;* SELF.items |
            ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET'
            IN TYPEOF (item))) |
            NOT (SIZEOF (QUERY (crv &lt;* 
            QUERY (elem &lt;* gcs\geometric_set.elements |
            ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CURVE'
            IN TYPEOF (elem))) |
            NOT (valid_basis_curve_in_2d_wireframe
            (crv))
            )) = 0)
            )) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="aic_geometrically_bounded_2d_wireframe.geometrically_bounded_2d_wireframe_representation.wr:wr7">WR7: SIZEOF (QUERY (gcs &lt;* QUERY (item &lt;* SELF.items |         
            ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.GEOMETRIC_CURVE_SET'
            IN TYPEOF (item))) |
            NOT (SIZEOF (QUERY (pnt &lt;*
            QUERY (elem &lt;* gcs\geometric_set.elements |
            ('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POINT'
            IN TYPEOF(elem))) |
            NOT (SIZEOF (TYPEOF (pnt) *
            ['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CARTESIAN_POINT',
            'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POINT_ON_CURVE'])
            = 1)
            )) = 0)
            )) = 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="aic_geometrically_bounded_2d_wireframe.valid_basis_curve_in_2d_wireframe">FUNCTION <b>valid_basis_curve_in_2d_wireframe</b></A><br>&nbsp;(crv : curve) : BOOLEAN;
         </code><pre>IF SIZEOF (['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.POLYLINE',
               'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.B_SPLINE_CURVE',
               'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.ELLIPSE',
               'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CIRCLE'] * 
               TYPEOF (crv)) = 1
    THEN RETURN (TRUE);
  ELSE
    -- if the curve is a trimmed_curve
    IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.TRIMMED_CURVE') 
    IN TYPEOF (crv)) THEN
      -- if a line, parabola, or hyperbola is being trimmed, then valid
      IF SIZEOF (['AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.LINE',
                   'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.PARABOLA',
                   'AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.HYPERBOLA'] *
           TYPEOF(crv\trimmed_curve.basis_curve)) = 1
        THEN RETURN (TRUE);
      -- otherwise, recursively check basis_curve
      ELSE RETURN (valid_basis_curve_in_2d_wireframe
                         (crv\trimmed_curve.basis_curve));
      END_IF;
    ELSE
      -- recursively check the offset_curve basis curve
      IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.OFFSET_CURVE_2D') 
      IN TYPEOF (crv))
        THEN RETURN (valid_basis_curve_in_2d_wireframe
                           (crv\offset_curve_2d.basis_curve));
      ELSE
        -- recursively check the curve_replica parent curve
        IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.CURVE_REPLICA') 
        IN TYPEOF (crv))
          THEN RETURN (valid_basis_curve_in_2d_wireframe
                         (crv\curve_replica.parent_curve));
        ELSE
          -- recursively check the composite_curve segments
          IF (('AIC_GEOMETRICALLY_BOUNDED_2D_WIREFRAME.COMPOSITE_CURVE') 
          IN TYPEOF (crv)) THEN
            RETURN (SIZEOF (QUERY (ccs &lt;* crv\composite_curve.segments |
                      NOT (valid_basis_curve_in_2d_wireframe
                             (ccs.parent_curve)))) = 0);
          END_IF;
        END_IF;
      END_IF;
    END_IF;
  END_IF;
  RETURN (FALSE);</pre><code>
         END_FUNCTION;
         </code><br><code><br>
         END_SCHEMA;&nbsp;&nbsp;--&nbsp;aic_geometrically_bounded_2d_wireframe<br></code><br><br><p>&copy; ISO 2010 &#8212; All rights reserved</p>
   </BODY>
</HTML>